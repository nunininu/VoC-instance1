networks:
  kafka-network:
    driver: bridge

services:
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka-network
    healthcheck:
      test: [
        "CMD-SHELL",
        "/opt/bitnami/zookeeper/bin/zkServer.sh status"
      ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 2g
          cpus: "0.2"

  kafka:
    image: bitnami/kafka:3.6
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_KRAFT_MODE=false
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=INTERNAL://0.0.0.0:9093,EXTERNAL://0.0.0.0:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9093,EXTERNAL://43.200.162.199:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
    depends_on:
      zookeeper:
        condition: service_healthy
    networks:
      - kafka-network
    deploy:
      resources:
        limits:
          memory: 3g
          cpus: "0.3"

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    networks:
      - kafka-network
    deploy:
      resources:
        limits:
          memory: 512m
          cpus: "0.2"

  api:
    build:
      context: ./api_server
    volumes:
      - ./api_server:/app
    env_file:
      - .env
    environment:
      - APP_PORT=8888
    ports:
      - "8888"
    networks:
      - kafka-network
    depends_on:
      - kafka
    deploy:
      resources:
        limits:
          memory: 1g
          cpus: "0.5"
