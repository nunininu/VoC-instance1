networks:
  kafka-network:
    driver: bridge

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    networks:
      - kafka-network
    deploy:
      resources:
        limits:
          memory: 128m  # AWS t2.large -> 256m
          cpus: "0.2"

  api1:
    build:
      context: ./api_server
    volumes:
      - /home/joon/keys:/keys
    env_file:
      - .env
    environment:
      - APP_PORT=8888
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9093
    ports:
      - "8888:8888"
    depends_on:
      - kafka
    networks:
      - kafka-network
    deploy:
      resources:
        limits:
          memory: 512m  # AWS t2.large -> 768m
          cpus: "0.5"

  api2:
    build:
      context: ./api_server
    volumes:
      - /home/joon/keys:/keys
    env_file:
      - .env
    environment:
      - APP_PORT=8889
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9093
    ports:
      - "8889:8889"
    depends_on:
      - kafka
    networks:
      - kafka-network
    deploy:
      resources:
        limits:
          memory: 512m  # AWS t2.large -> 768m
          cpus: "0.5"

  stt:
    build:
      context: ./stt_server
    volumes:
      - /home/joon/keys:/keys
    env_file:
      - .env
    ports:
      - "8001:8001"
    depends_on:
      - kafka
    networks:
      - kafka-network
    deploy:
      resources:
        limits:
          memory: 512m  # AWS t2.large -> 768m
          cpus: "0.5"

  kafka:
    image: bitnami/kafka:3.6
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_KRAFT_MODE=false
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=INTERNAL://0.0.0.0:9093,EXTERNAL://0.0.0.0:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9093,EXTERNAL://34.47.117.122:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
    depends_on:
      - zookeeper
    networks:
      - kafka-network
    deploy:
      resources:
        limits:
          memory: 1g    # AWS t2.large -> 1.5g
          cpus: "0.3"

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka-network
    deploy:
      resources:
        limits:
          memory: 256m  # AWS t2.large -> 512m
          cpus: "0.2"
